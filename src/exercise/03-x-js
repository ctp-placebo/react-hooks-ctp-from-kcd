// As a community we’re pretty good at lifting state. 
// It becomes natural over time. One thing that we typically 
// have trouble remembering to do is to push state back down 
// (or colocate state).

// 👨‍💼 Peter told us that now users only want the animal displayed 
// instead of the name:

// function Display({animal}) {
//   return <div>{`Your favorite animal is: ${animal}!`}</div>
// }

// You'll notice that just updating the Display component to 
// this works fine, but for the extra credit, go through the 
// process of moving state to the components that need it. 
// You know what you just did for the Animal component? 
// You need to do the opposite thing for the Name component.

import * as React from 'react'

function Name() {
  const [name, setName] = React.useState('')
  return (
    <div>
      <label htmlFor="name">Name: </label>
      <input 
        id="name" 
        value={name} 
        onChange={event => setName(event.target.value)} />
    </div>
  )
}

// 🐨 accept `animal` and `onAnimalChange` props to this component
function FavoriteAnimal({animal, onAnimalChange}) {
  // 💣 delete this, it's now managed by the App
  // const [animal, setAnimal] = React.useState('')
  return (
    <div>
      <label htmlFor="animal">Favorite Animal: </label>
      <input
        id="animal"
        value={animal}
        onChange={onAnimalChange}
      />
    </div>
  )
}

// 🐨 uncomment this
function Display({animal}) {
  return <div>{`Heylo, your favorite animal is: ${animal}.`}</div>
}

// 💣 remove this component in favor of the new one
// function Display({name}) {
//   return <div>{`Hey ${name}, you are great!`}</div>
// }

function App() {
  // 🐨 add a useState for the animal
  
  const [animal, setAnimal] = React.useState('')
  return (
    <form>
      <Name />
      {/* 🐨 pass the animal and onAnimalChange prop here (similar to the Name component above) */}
      <FavoriteAnimal
        animal={animal} 
        onAnimalChange={event => setAnimal(event.target.value)} />
      {/* 🐨 pass the animal prop here */}
      <Display animal={animal}/>
    </form>
  )
}

export default App
